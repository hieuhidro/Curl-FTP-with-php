{"name":"Curl-ftp-with-php","tagline":"Download file from ftp with php without timeout, file large, curl ftp download file, list file from ftp with curl, ","body":"### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ git fetch origin\r\n$ git checkout https://github.com/thien321091/Curl-FTP-with-php.git\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `Curl-ftp-with-php` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n\r\n\r\n# Curl-FTP-with-php\r\nDownload file from ftp with php without timeout, file large, curl ftp download file, list file from ftp with curl, \r\n\r\n<h2>With Magento project</h2>\r\n**Copy file and folder to project** \r\ngoto shell and run cmd\r\n<br/>1: Xampp --> Shell commander\r\n<br/>2: order --> Run command line with what you know. \r\n\r\n<br/><code> php -f ftp_download.php --host \"ftp.yourhost.com\" --user \"ussername\" --pw \"password\" --sr \"/\" --dest \"/\" </code>\r\n\r\nMore option Usage:  \r\n<pre>\r\nphp ftp_download.php -- [options]\r\n--host    [value]      Ftp host connection. (required)\t\t\r\n--hp      [value]      Ftp Port connection. (Default 21)\t\r\n--user    [value]      User login.          (default anonymou)\t\r\n--pw      [value]      Password login ftp.  (default empty)\t\r\n--ssl     [value]      Default false (true/false)\t\t\r\n--fm      [value]      Default FTP_BINARY\t\t\t\r\n--upload  <value>      Upload all file from src to dest. Default false\r\n--timeout [value]      Default 60\t\t\t\t\r\n--sr      [value]      Folder download.     (required)\t\t\r\n--dest    [value]      Folder save to.      (required)\t\r\nhelp                   This help\r\n</pre>\r\n\r\n**With order project php** Use class **Mage_Dataflow_Model_Convert_Adapter_Extend_Curl**;\r\n<pre>\r\n$connect = array(\r\n                'host' => $host,\r\n                'port' => $port,\r\n                'user' => $user,\t  \r\n                'password' => $password,  \r\n                'ssl' => $ssl,\t\t  // default false \r\n                'file_mode' => $filemode, // default FTP_BINARY\r\n                'timeout' => $timeout,\r\n            );\r\n            if($sourceFolder && $destFolder){\r\n\t\t$CurlFtp = new Mage_Dataflow_Model_Convert_Adapter_Extend_Curl($connect);\r\n                $lsDir = $CurlFtp->getListDir($sourceFolder);\r\n                if(!is_dir($destFolder)){\r\n                    mkdir($dest,'0777',true);\r\n                }\r\n                if(isset($lsDir['file'])){\r\n                    $i = 0;\r\n                    foreach($lsDir['file'] as $key => $file){\r\n                        if($i == 4) break;\r\n                        echo \"Downloading: $file \\r\\n\";\r\n                        if($this->_getFtp()->curlGetFile($sourceFolder.DS.$file,$destFolder.'/'.$file, false)){\r\n                            echo \"Download successful File: $file \\r\\n\";\r\n                        }\r\n                    }\r\n                }else{\r\n                    echo \"Doesn't exists any file in folder\";\r\n                }\r\n            }\r\n</pre>\r\n\r\n","google":"UA-56659001-3","note":"Don't delete this file! It's used internally to help with page regeneration."}